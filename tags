!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
$FZF_DEFAULT_COMMAND	nvim/fzf.vim	/^let $FZF_DEFAULT_COMMAND = 'fd -H'$/;"	v
0	nvim/coc-settings.json	/^    "UltiSnips",$/;"	s	array:snippets.ultisnips.directories
0	nvim/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "html", "yaml",  "json", "python,/;"	s	array:coc.preferences.formatOnSaveFiletypes
1	nvim/coc-settings.json	/^    "~\/.config\/nvim\/UltiSnips"$/;"	s	array:snippets.ultisnips.directories
1	nvim/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "html", "yaml",  "json", "python,/;"	s	array:coc.preferences.formatOnSaveFiletypes
2	nvim/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "html", "yaml",  "json", "python,/;"	s	array:coc.preferences.formatOnSaveFiletypes
3	nvim/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "html", "yaml",  "json", "python,/;"	s	array:coc.preferences.formatOnSaveFiletypes
4	nvim/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "html", "yaml",  "json", "python,/;"	s	array:coc.preferences.formatOnSaveFiletypes
5	nvim/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "html", "yaml",  "json", "python,/;"	s	array:coc.preferences.formatOnSaveFiletypes
<BS>	nvim/keybindings.vim	/^nnoremap <BS> X$/;"	m
<C-Left>	nvim/keybindings.vim	/^nnoremap <C-Left> <c-w>h$/;"	m
<C-Right>	nvim/keybindings.vim	/^nnoremap <C-Right> <c-w>l$/;"	m
<C-b>	nvim/coc.vim	/^inoremap <nowait><expr> <C-b> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(0)\\<cr>" : "\\/;"	m
<C-b>	nvim/coc.vim	/^nnoremap <nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<C-f>	nvim/coc.vim	/^inoremap <nowait><expr> <C-f> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(1)\\<cr>" : "\\/;"	m
<C-f>	nvim/coc.vim	/^nnoremap <nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<C-s>	nvim/coc.vim	/^nmap <silent> <C-s> <Plug>(coc-range-select)$/;"	m
<C-s>	nvim/coc.vim	/^xmap <silent> <C-s> <Plug>(coc-range-select)$/;"	m
<Leader>z	nvim/keybindings.vim	/^xmap <Leader>z <Plug>(Limelight)<cr>$/;"	m
<M-Down>	nvim/keybindings.vim	/^nnoremap <silent> <M-Down>    :resize -2<CR>$/;"	m
<M-Left>	nvim/keybindings.vim	/^nnoremap <silent> <M-Left>    :vertical resize -2<CR>$/;"	m
<M-Right>	nvim/keybindings.vim	/^nnoremap <silent> <M-Right>    :vertical resize +2<CR>$/;"	m
<M-Up>	nvim/keybindings.vim	/^nnoremap <silent> <M-Up>    :resize +2<CR>$/;"	m
<M-h>	nvim/keybindings.vim	/^nnoremap <silent> <M-h>    :vertical resize -2<CR>$/;"	m
<M-j>	nvim/keybindings.vim	/^nnoremap <silent> <M-j>    :resize -2<CR>$/;"	m
<M-k>	nvim/keybindings.vim	/^nnoremap <silent> <M-k>    :resize +2<CR>$/;"	m
<M-l>	nvim/keybindings.vim	/^nnoremap <silent> <M-l>    :vertical resize +2<CR>$/;"	m
<PageDown>	nvim/keybindings.vim	/^map <PageDown> <Nop>$/;"	m
<PageUp>	nvim/keybindings.vim	/^map <PageUp> <Nop>$/;"	m
<S-TAB>	nvim/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	nvim/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<c-@>	nvim/coc.vim	/^  inoremap <silent><expr> <c-@> coc#refresh()$/;"	m
<c-Down>	nvim/keybindings.vim	/^nnoremap <c-Down> <c-w>j$/;"	m
<c-H>	nvim/keybindings.vim	/^nnoremap <c-H> <c-w>H$/;"	m
<c-L>	nvim/keybindings.vim	/^nnoremap <c-L> <c-w>L$/;"	m
<c-Up>	nvim/keybindings.vim	/^nnoremap <c-Up> <c-w>k$/;"	m
<c-h>	nvim/keybindings.vim	/^nnoremap <c-h> <c-w>h$/;"	m
<c-j>	nvim/keybindings.vim	/^nnoremap <c-j> <c-w>j$/;"	m
<c-k>	nvim/keybindings.vim	/^nnoremap <c-k> <c-w>k$/;"	m
<c-l>	nvim/keybindings.vim	/^nnoremap <c-l> <c-w>l$/;"	m
<c-p>	nvim/keybindings.vim	/^map <c-p> <Plug>MarkdownPreviewToggle$/;"	m
<c-space>	nvim/coc.vim	/^  inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<c-t>	nvim/keybindings.vim	/^nnoremap <silent> <c-t> :tabnew<CR>$/;"	m
<cr>	nvim/coc.vim	/^inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()$/;"	m
<leader><leader>	nvim/keybindings.vim	/^map <leader><leader> <Plug>(neoterm-repl-send)ap$/;"	m
<leader>a	nvim/coc.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>a	nvim/coc.vim	/^xmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	nvim/coc.vim	/^nmap <leader>ac  <Plug>(coc-codeaction)$/;"	m
<leader>f	nvim/coc.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	nvim/coc.vim	/^xmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f.	nvim/keybindings.vim	/^nnoremap <leader>f. :Files .\/<cr>$/;"	m
<leader>ff	nvim/keybindings.vim	/^nnoremap <leader>ff :Files ~<cr>$/;"	m
<leader>h	nvim/keybindings.vim	/^nnoremap <leader>h :call Html()<cr>$/;"	m
<leader>p	nvim/keybindings.vim	/^map <leader>p <Plug>(neoterm-repl-send)$/;"	m
<leader>qf	nvim/coc.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>rn	nvim/coc.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>t	nvim/keybindings.vim	/^nmap <leader>t :TagbarToggle<CR>$/;"	m
<leader>w	nvim/keybindings.vim	/^nnoremap <leader>w :w <cr>:so % <cr>$/;"	m
<leader>x	nvim/keybindings.vim	/^nnoremap <leader>x :Limelight!<cr>$/;"	m
<leader>z	nvim/keybindings.vim	/^nnoremap <leader>z :Limelight0.8<cr>$/;"	m
<space>a	nvim/coc.vim	/^nnoremap <silent><nowait> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<space>c	nvim/coc.vim	/^nnoremap <silent><nowait> <space>c  :<C-u>CocList commands<cr>$/;"	m
<space>e	nvim/coc.vim	/^nnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<space>j	nvim/coc.vim	/^nnoremap <silent><nowait> <space>j  :<C-u>CocNext<CR>$/;"	m
<space>k	nvim/coc.vim	/^nnoremap <silent><nowait> <space>k  :<C-u>CocPrev<CR>$/;"	m
<space>o	nvim/coc.vim	/^nnoremap <silent><nowait> <space>o  :<C-u>CocList outline<cr>$/;"	m
<space>p	nvim/coc.vim	/^nnoremap <silent><nowait> <space>p  :<C-u>CocListResume<CR>$/;"	m
<space>s	nvim/coc.vim	/^nnoremap <silent><nowait> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
Fold	nvim/coc.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Format	nvim/coc.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
Html	nvim/init.vim	/^function! Html()$/;"	f
K	nvim/coc.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
Ls	nvim/init.vim	/^command! Ls Buffers$/;"	c
OR	nvim/coc.vim	/^command! -nargs=0 OR   :call     CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
Tab	nvim/init.vim	/^command! Tab tabnew$/;"	c
[b	nvim/keybindings.vim	/^nnoremap <silent> [b :bprevious<CR>$/;"	m
[g	nvim/coc.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
]b	nvim/keybindings.vim	/^nnoremap <silent> ]b :bnext<CR>$/;"	m
]g	nvim/coc.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
ac	nvim/coc.vim	/^omap ac <Plug>(coc-classobj-a)$/;"	m
ac	nvim/coc.vim	/^xmap ac <Plug>(coc-classobj-a)$/;"	m
af	nvim/coc.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
af	nvim/coc.vim	/^xmap af <Plug>(coc-funcobj-a)$/;"	m
coc.preferences.formatOnSaveFiletypes	nvim/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": ["css", "markdown", "html", "yaml",  "json", "python,/;"	a
dotfiles	README.md	/^# dotfiles$/;"	c
g:UltiSnipsJumpBackwardTrigger	nvim/ultisnips.vim	/^let g:UltiSnipsJumpBackwardTrigger='<s-tab>'$/;"	v
g:UltiSnipsJumpForwardTrigger	nvim/ultisnips.vim	/^let g:UltiSnipsJumpForwardTrigger='<tab>'$/;"	v
g:UltisnipsExandTrigger	nvim/ultisnips.vim	/^let g:UltisnipsExandTrigger='<tab>'$/;"	v
g:floaterm_autoinsert	nvim/floaterm.vim	/^let g:floaterm_autoinsert=1$/;"	v
g:floaterm_gitcommit	nvim/floaterm.vim	/^let g:floaterm_gitcommit='floaterm'$/;"	v
g:floaterm_height	nvim/floaterm.vim	/^let g:floaterm_height=0.8$/;"	v
g:floaterm_keymap_new	nvim/floaterm.vim	/^let g:floaterm_keymap_new    = '<F4>'$/;"	v
g:floaterm_keymap_next	nvim/floaterm.vim	/^let g:floaterm_keymap_next   = '<F2>'$/;"	v
g:floaterm_keymap_prev	nvim/floaterm.vim	/^let g:floaterm_keymap_prev   = '<F3>'$/;"	v
g:floaterm_keymap_toggle	nvim/floaterm.vim	/^let g:floaterm_keymap_toggle = '<F1>'$/;"	v
g:floaterm_width	nvim/floaterm.vim	/^let g:floaterm_width=0.8$/;"	v
g:floaterm_wintitle	nvim/floaterm.vim	/^let g:floaterm_wintitle=0$/;"	v
g:fzf_layout	nvim/fzf.vim	/^let g:fzf_layout = { 'window': { 'width': 0.8, 'height': 0.6 ,'border': 'sharp' } }$/;"	v
g:indentLine_char	nvim/indentline.vim	/^let g:indentLine_char = '‚ñè'$/;"	v
g:mkdp_browser	nvim/markdownpreview.vim	/^let g:mkdp_browser = 'firefox'$/;"	v
g:neoterm_default_mod	nvim/neoterm.vim	/^let g:neoterm_default_mod='vertical'$/;"	v
g:neoterm_direct_open_repl	nvim/neoterm.vim	/^let g:neoterm_direct_open_repl=1$/;"	v
g:netrw_altv	nvim/netrw.vim	/^let g:netrw_altv = 1$/;"	v
g:netrw_banner	nvim/netrw.vim	/^let g:netrw_banner = 0$/;"	v
g:netrw_browse_split	nvim/netrw.vim	/^let g:netrw_browse_split = 4$/;"	v
g:netrw_liststyle	nvim/netrw.vim	/^let g:netrw_liststyle = 3$/;"	v
g:netrw_winsize	nvim/netrw.vim	/^let g:netrw_winsize = 25$/;"	v
g:pymode	nvim/pymode.vim	/^let g:pymode = 1$/;"	v
g:pymode_breakpoint	nvim/pymode.vim	/^let g:pymode_breakpoint = 1$/;"	v
g:pymode_breakpoint_bind	nvim/pymode.vim	/^let g:pymode_breakpoint_bind = '<leader>b'$/;"	v
g:pymode_doc	nvim/pymode.vim	/^let g:pymode_doc = 1$/;"	v
g:pymode_doc_bind	nvim/pymode.vim	/^let g:pymode_doc_bind = 'K'$/;"	v
g:pymode_indent	nvim/pymode.vim	/^let g:pymode_indent = 1$/;"	v
g:pymode_lint	nvim/pymode.vim	/^let g:pymode_lint = 1$/;"	v
g:pymode_lint_checkers	nvim/pymode.vim	/^let g:pymode_lint_checkers = ['pyflakes', 'pep8', 'pylint']$/;"	v
g:pymode_lint_comment_symbol	nvim/pymode.vim	/^let g:pymode_lint_comment_symbol = 'CC'$/;"	v
g:pymode_lint_cwindow	nvim/pymode.vim	/^let g:pymode_lint_cwindow = 1$/;"	v
g:pymode_lint_error_symbol	nvim/pymode.vim	/^let g:pymode_lint_error_symbol = 'EE'$/;"	v
g:pymode_lint_info_symbol	nvim/pymode.vim	/^let g:pymode_lint_info_symbol = 'II'$/;"	v
g:pymode_lint_message	nvim/pymode.vim	/^let g:pymode_lint_message = 1$/;"	v
g:pymode_lint_on_write	nvim/pymode.vim	/^let g:pymode_lint_on_write = 1$/;"	v
g:pymode_lint_pyflakes_symbol	nvim/pymode.vim	/^let g:pymode_lint_pyflakes_symbol = 'FF'$/;"	v
g:pymode_lint_signs	nvim/pymode.vim	/^let g:pymode_lint_signs = 1$/;"	v
g:pymode_lint_todo_symbol	nvim/pymode.vim	/^let g:pymode_lint_todo_symbol = 'WW'$/;"	v
g:pymode_lint_visual_symbol	nvim/pymode.vim	/^let g:pymode_lint_visual_symbol = 'RR'$/;"	v
g:pymode_motion	nvim/pymode.vim	/^let g:pymode_motion = 1$/;"	v
g:pymode_option_max_line_lenght	nvim/pymode.vim	/^let g:pymode_option_max_line_lenght = 79$/;"	v
g:pymode_options	nvim/pymode.vim	/^let g:pymode_options = 1$/;"	v
g:pymode_options_colorcolumn	nvim/pymode.vim	/^let g:pymode_options_colorcolumn = 1$/;"	v
g:pymode_preview_height	nvim/pymode.vim	/^let g:pymode_preview_height = &previewheight$/;"	v
g:pymode_quickfix_maxheight	nvim/pymode.vim	/^let g:pymode_quickfix_maxheight = 6$/;"	v
g:pymode_quickfix_minheight	nvim/pymode.vim	/^let g:pymode_quickfix_minheight = 3$/;"	v
g:pymode_rope_complete_on_dot	nvim/pymode.vim	/^let g:pymode_rope_complete_on_dot = 1$/;"	v
g:pymode_rope_completion	nvim/pymode.vim	/^let g:pymode_rope_completion = 1$/;"	v
g:pymode_rope_completion_bind	nvim/pymode.vim	/^let g:pymode_rope_completion_bind = '<C-Space>'$/;"	v
g:pymode_run	nvim/pymode.vim	/^let g:pymode_run = 1$/;"	v
g:pymode_run_bind	nvim/pymode.vim	/^let g:pymode_run_bind = '<leader><space>'$/;"	v
g:pymode_syntax	nvim/pymode.vim	/^let g:pymode_syntax = 1$/;"	v
g:pymode_syntax_all	nvim/pymode.vim	/^let g:pymode_syntax_all = 1$/;"	v
g:pymode_syntax_builtin_objs	nvim/pymode.vim	/^let g:pymode_syntax_builtin_objs = g:pymode_syntax_all$/;"	v
g:pymode_syntax_builtin_types	nvim/pymode.vim	/^let g:pymode_syntax_builtin_types = g:pymode_syntax_all$/;"	v
g:pymode_syntax_doctests	nvim/pymode.vim	/^let g:pymode_syntax_doctests = g:pymode_syntax_all$/;"	v
g:pymode_syntax_highlight_equal_operator	nvim/pymode.vim	/^let g:pymode_syntax_highlight_equal_operator = g:pymode_syntax_all$/;"	v
g:pymode_syntax_highlight_stars_operator	nvim/pymode.vim	/^let g:pymode_syntax_highlight_stars_operator = g:pymode_syntax_all$/;"	v
g:pymode_syntax_indent_errors	nvim/pymode.vim	/^let g:pymode_syntax_indent_errors = g:pymode_syntax_all$/;"	v
g:pymode_syntax_print_as_function	nvim/pymode.vim	/^let g:pymode_syntax_print_as_function = 1$/;"	v
g:pymode_syntax_slow_sync	nvim/pymode.vim	/^let g:pymode_syntax_slow_sync = 1$/;"	v
g:pymode_syntax_space_errors	nvim/pymode.vim	/^let g:pymode_syntax_space_errors = g:pymode_syntax_all$/;"	v
g:pymode_syntax_string_format	nvim/pymode.vim	/^let g:pymode_syntax_string_format = g:pymode_syntax_all$/;"	v
g:pymode_syntax_string_formatting	nvim/pymode.vim	/^let g:pymode_syntax_string_formatting = g:pymode_syntax_all$/;"	v
g:pymode_syntax_string_templates	nvim/pymode.vim	/^let g:pymode_syntax_string_templates = g:pymode_syntax_all$/;"	v
g:pymode_trim_whitespaces	nvim/pymode.vim	/^let g:pymode_trim_whitespaces = 1$/;"	v
g:pymode_warnings	nvim/pymode.vim	/^let g:pymode_warnings = 1$/;"	v
g:startify_bookmarks	nvim/startscreen.vim	/^let g:startify_bookmarks = [$/;"	v
g:startify_files_number	nvim/startscreen.vim	/^let g:startify_files_number = 5$/;"	v
g:startify_fortune_use_unicode	nvim/startscreen.vim	/^let g:startify_fortune_use_unicode = 1$/;"	v
g:startify_lists	nvim/startscreen.vim	/^let g:startify_lists = [$/;"	v
g:startify_padding_left	nvim/startscreen.vim	/^let g:startify_padding_left = 5$/;"	v
g:startify_session_dir	nvim/startscreen.vim	/^let g:startify_session_dir = '~\/.config\/nvim\/session'$/;"	v
g:tex_conceal	nvim/texconceal.vim	/^let g:tex_conceal='abdmg'$/;"	v
g:tex_flavor	nvim/vimtex.vim	/^let g:tex_flavor='latex'$/;"	v
g:vimtex_compiler_latexmk	nvim/vimtex.vim	/^let g:vimtex_compiler_latexmk = { 'options' : [ '-pdf', '-pdflatex="xelatex --shell-escape %O %S/;"	v
g:vimtex_complete_close_braces	nvim/vimtex.vim	/^let g:vimtex_complete_close_braces = 1$/;"	v
g:vimtex_complete_enabled	nvim/vimtex.vim	/^let g:vimtex_complete_enabled = 1$/;"	v
g:vimtex_complete_ignore_case	nvim/vimtex.vim	/^let g:vimtex_complete_ignore_case = 1$/;"	v
g:vimtex_complete_smart_case	nvim/vimtex.vim	/^let g:vimtex_complete_smart_case = 1$/;"	v
g:vimtex_quickfix_mode	nvim/vimtex.vim	/^let g:vimtex_quickfix_mode=0$/;"	v
g:vimtex_view_method	nvim/vimtex.vim	/^let g:vimtex_view_method='zathura'$/;"	v
g:webdevicons_enable_startify	nvim/startscreen.vim	/^let g:webdevicons_enable_startify =1$/;"	v
gd	nvim/coc.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gi	nvim/coc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gr	nvim/coc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gy	nvim/coc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
ic	nvim/coc.vim	/^omap ic <Plug>(coc-classobj-i)$/;"	m
ic	nvim/coc.vim	/^xmap ic <Plug>(coc-classobj-i)$/;"	m
if	nvim/coc.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
if	nvim/coc.vim	/^xmap if <Plug>(coc-funcobj-i)$/;"	m
markdown	nvim/init.vim	/^augroup markdown$/;"	a
mygroup	nvim/coc.vim	/^augroup mygroup$/;"	a
python.linting.pylintEnabled	nvim/coc-settings.json	/^  "python.linting.pylintEnabled": true,$/;"	b
r	libinput-gestures.conf	/^gesture swipe up 3 wmctrl -r :ACTIVE: -b toggle,maximized_horz,maximized_vert$/;"	k
s:check_back_space	nvim/coc.vim	/^function! s:check_back_space() abort$/;"	f
s:show_documentation	nvim/coc.vim	/^function! s:show_documentation()$/;"	f
snippets.ultisnips.directories	nvim/coc-settings.json	/^  "snippets.ultisnips.directories":$/;"	a
